<Application x:Class="TouhouLauncher.App"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:local="clr-namespace:TouhouLauncher"
			 StartupUri="Views/MainWindow.xaml"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 d1p1:Ignorable="d"
			 xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006">
	<Application.Resources>
		<ResourceDictionary>
			<local:AppDependencies x:Key="Dependencies"/>
			
			<Style x:Key="FocusVisual3">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush x:Key="Button.Static.Background1" Color="Transparent"/>
			<SolidColorBrush x:Key="Button.Static.Border1" Color="White"/>
			<SolidColorBrush x:Key="Button.Static.Foreground1" Color="White"/>
			<SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
			<SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
			<SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
			<SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
			<SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
			<SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
			<SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
			<Style x:Key="CrossButton" TargetType="{x:Type Button}">
				<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}"/>
				<Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
				<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
				<Setter Property="Foreground" Value="{StaticResource Button.Static.Foreground1}"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="HorizontalContentAlignment" Value="Center"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="Width" Value="50"/>
				<Setter Property="Height" Value="50"/>
				<Setter Property="Padding" Value="1"/>
				<Setter Property="Cursor" Value="Hand"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1000" SnapsToDevicePixels="true">
								<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Content">
					<Setter.Value>
						<Canvas>
							<Line X1="-12" Y1="-12" X2="12" Y2="12" Stroke="White" StrokeThickness="2" SnapsToDevicePixels="True"/>
							<Line X1="12" Y1="-12" X2="-12" Y2="12" Stroke="White" StrokeThickness="2" SnapsToDevicePixels="True"/>
						</Canvas>
					</Setter.Value>
				</Setter>
			</Style>
			
			<Style x:Key="FocusVisual2">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush x:Key="Item.MouseOver.Background" Color="#342E30"/>
			<SolidColorBrush x:Key="Item.MouseOver.Border" Color="#342E30"/>
			<SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#342E30"/>
			<SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#342E30"/>
			<SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#342E30"/>
			<SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#342E30"/>
			<Style x:Key="SettingsCategoryMenuItem" TargetType="{x:Type ListBoxItem}">
				<Setter Property="SnapsToDevicePixels" Value="True"/>
				<Setter Property="Padding" Value="40, 10, 0, 10"/>
				<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
				<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="Foreground" Value="White"/>
				<Setter Property="BorderBrush" Value="Transparent"/>
				<Setter Property="BorderThickness" Value="0"/>
				<Setter Property="FontSize" Value="18"/>
				<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ListBoxItem}">
							<Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
							<ControlTemplate.Triggers>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="True"/>
									</MultiTrigger.Conditions>
									<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
									<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="Selector.IsSelectionActive" Value="False"/>
										<Condition Property="IsSelected" Value="True"/>
									</MultiTrigger.Conditions>
									<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
									<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="Selector.IsSelectionActive" Value="True"/>
										<Condition Property="IsSelected" Value="True"/>
									</MultiTrigger.Conditions>
									<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
									<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
								</MultiTrigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="FocusVisual1">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Color x:Key="Button.Static.Background.Color" A="#FF" R="#34" G="#2E" B="#30"/>
			<Color x:Key="Button.MouseOver.Background.Color" A="#FF" R="#45" G="#3F" B="#41"/>
			<SolidColorBrush x:Key="Button.Static.Background" Color="{StaticResource ResourceKey=Button.Static.Background.Color}"/>
			<SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
			<SolidColorBrush x:Key="Button.MouseOver.Background" Color="{StaticResource ResourceKey=Button.MouseOver.Background.Color}"/>
			<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
			<SolidColorBrush x:Key="Button.Pressed.Background" Color="#342E30"/>
			<SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
			<SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
			<SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
			<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
			<Style x:Key="DarkButton" TargetType="{x:Type Button}">
				<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
				<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
				<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
				<Setter Property="Foreground" Value="White"/>
				<Setter Property="BorderThickness" Value="0"/>
				<Setter Property="HorizontalContentAlignment" Value="Center"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="Padding" Value="1"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
								<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsDefaulted" Value="true">
									<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
								</Trigger>
								<EventTrigger RoutedEvent="Mouse.MouseEnter">
									<BeginStoryboard>
										<Storyboard>
											<ColorAnimation Duration="0:0:0.125" Storyboard.TargetProperty="(Border.Background).Color" To="{StaticResource Button.MouseOver.Background.Color}"/>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<EventTrigger RoutedEvent="Mouse.MouseLeave">
									<BeginStoryboard>
										<Storyboard>
											<ColorAnimation Duration="0:0:0.125" Storyboard.TargetProperty="(Border.Background).Color" To="{StaticResource Button.Static.Background.Color}"/>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
									<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
									<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
									<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<SolidColorBrush x:Key="TextBox.Static.Border" Color="#453F41"/>
			<SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#666666"/>
			<SolidColorBrush x:Key="TextBox.Focus.Border" Color="#7F7579"/>
			<Style x:Key="DarkTextbox" TargetType="{x:Type TextBox}">
				<Setter Property="Background" Value="#342E30"/>
				<Setter Property="BorderBrush" Value="#453F41"/>
				<Setter Property="Foreground" Value="White"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
				<Setter Property="HorizontalContentAlignment" Value="Left"/>
				<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
				<Setter Property="AllowDrop" Value="true"/>
				<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
				<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TextBox}">
							<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
								<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Opacity" TargetName="border" Value="0.56"/>
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
								</Trigger>
								<Trigger Property="IsKeyboardFocused" Value="true">
									<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
							<Condition Property="IsSelectionActive" Value="false"/>
						</MultiTrigger.Conditions>
						<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
					</MultiTrigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="FocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="OptionMarkFocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FF2A2A2A"/>
			<SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF666666"/>
			<SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FFFFFFFF"/>
			<SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FF3A3A3A"/>
			<SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF888888"/>
			<SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FFFFFFFF"/>
			<SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FF444444"/>
			<SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF999999"/>
			<SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FFFFFFFF"/>
			<SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
			<SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
			<SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
			<Style x:Key="DarkCheckbox" TargetType="{x:Type CheckBox}">
				<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
				<Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
				<Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
				<Setter Property="Foreground" Value="{StaticResource OptionMark.Static.Glyph}"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type CheckBox}">
							<Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Border x:Name="checkBoxBorder" Padding="3" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
									<Grid x:Name="markGrid">
										<Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="Fill"/>
										<Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0" Width="12" Height="12"/>
									</Grid>
								</Border>
								<ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="10 0 0 0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="HasContent" Value="true">
									<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
									<Setter Property="Padding" Value="4,-1,0,0"/>
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
									<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
									<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
									<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
									<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
									<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
									<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
									<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
									<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
									<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
								</Trigger>
								<Trigger Property="IsChecked" Value="true">
									<Setter Property="Opacity" TargetName="optionMark" Value="1"/>
									<Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
								</Trigger>
								<Trigger Property="IsChecked" Value="{x:Null}">
									<Setter Property="Opacity" TargetName="optionMark" Value="0"/>
									<Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Application.Resources>
</Application>